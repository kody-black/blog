


[{"content":"想要把HackTricks本地化，因为该项目是使用gitbook完成的，所以也去了解了一下相关的知识。\n比较遗憾的是，最后发现要本地使用的话，并没有本地化的接口，唯一的方法就是导出为PDF，但这个还是个gitbook的付费功能~\n首先，gitbook-cli 已经停止维护了，如果要使用该工具的话，node大概得用14以下的版本，但是很多的新组件或者新的文档是用不了的，已经过时了。\n目前GitBook主推他们的在线平台GitBook，这是一个纯线上的文档管理平台。创建账号后有新手指南，跟着可以直接创建docs。导入资源的方法有两种，一是Import，而是使用github sync功能，前者有容量限制，稍微大点的图书就只能用后面的方法。\n我们需要使用HackTricks自己构建Gitbook，可以将HackTricks-wiki/hacktricks (github.com) fork下来，然后在gitbook中将该仓库github sync，经过一些简单配置后，就可以将其变成可以自己管理的gitbook了。当然也可以发布出来HackTricks\n最后，为了保持我自己管理的HackTricks跟随主仓库自动更新，可以配置如下的Github Action\nname: Sync with Upstream on: schedule: - cron: \u0026#39;0 0 * * *\u0026#39; # 每天凌晨 0 点执行 push: branches: - master # 当主分支有变化时也触发同步 jobs: sync: runs-on: ubuntu-latest steps: - name: Checkout repository uses: actions/checkout@v3 with: repository: kody-black/hacktricks ref: master - name: Set up Git run: | git config --global user.email \u0026#34;kodyblack@example.com\u0026#34; git config --global user.name \u0026#34;Kody Black\u0026#34; - name: Fetch upstream run: | git remote add upstream https://github.com/HackTricks-wiki/hacktricks.git git fetch upstream - name: Merge upstream changes run: | git merge upstream/master --allow-unrelated-histories git push origin master ","date":"2024年9月20日","externalUrl":null,"permalink":"/blog/posts/gitbook%E4%BD%BF%E7%94%A8%E4%BD%93%E9%AA%8C/","section":"博客","summary":"gitbook并没有本地化的接口 /(ㄒoㄒ)/~~","title":"gitbook使用体验","type":"posts"},{"content":"\n","date":"2024年9月20日","externalUrl":null,"permalink":"/blog/tags/","section":"标签","summary":"","title":"标签","type":"tags"},{"content":"\n","date":"2024年9月20日","externalUrl":null,"permalink":"/blog/categories/","section":"分类","summary":"","title":"分类","type":"categories"},{"content":"","date":"2024年9月20日","externalUrl":null,"permalink":"/blog/tags/%E5%B7%A5%E5%85%B7/","section":"标签","summary":"","title":"工具","type":"tags"},{"content":"","date":"2024年9月20日","externalUrl":null,"permalink":"/blog/","section":"且听风吟","summary":"","title":"且听风吟","type":"page"},{"content":"\n","date":"2024年9月20日","externalUrl":null,"permalink":"/blog/categories/%E7%94%9F%E6%B4%BB%E5%88%86%E4%BA%AB/","section":"分类","summary":"","title":"生活分享","type":"categories"},{"content":"","date":"2024年7月26日","externalUrl":null,"permalink":"/blog/tags/linux/","section":"标签","summary":"","title":"Linux","type":"tags"},{"content":" Ubuntu # Ubuntu Releases Ubuntu 22.04.3 LTS (Jammy Jellyfish) Ubuntu 20.04.6 LTS (Focal Fossa) Ubuntu 18.04.6 LTS (Bionic Beaver) CentOS # Download (centos.org)\n镜像仓库 # sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak #最好还是先备份一下，真的~ sudo vi /etc/apt/sources.list ubuntu | 镜像站使用帮助 | 清华大学开源软件镜像站 | Tsinghua Open Source Mirror\n上海交通大学 Linux 用户组 软件源镜像服务 (sjtu.edu.cn)\n常用软件：tmux；ssh；build-essential；\npython和pip # sudo ln -sf /usr/bin/python3 /usr/bin/python #给python链接到python3\npython要安装别的版本直接问gpt就行\nInstallation - pip documentation v23.3 (pypa.io)\nwget https://bootstrap.pypa.io/get-pip.py sudo python get-pip.py pip源：\n上海交通大学 Linux 用户组 软件源镜像服务 (sjtu.edu.cn) docker # 安装docker\nInstall Docker Engine on Ubuntu | Docker Docs\nrun without sudo\nLinux post-installation steps for Docker Engine | Docker Docs\ndocker源\n上海交通大学 Linux 用户组 软件源镜像服务 (sjtu.edu.cn)\ndocker-compose\nInstall Compose standalone | Docker Docs\n代理 # Releases · trojan-gfw/trojan (github.com)\nzsh相关 # Installing ZSH · ohmyzsh/ohmyzsh Wiki (github.com) ohmyzsh/ohmyzsh ohmyzsh没有代理安装起来总是失败，可以换用下面的方法：\nwget https://gitee.com/mirrors/oh-my-zsh/raw/master/tools/install.sh chmod +x install.sh vim install.sh # 修改git仓库为gitee,找到下面两行并进行修改 REPO=${REPO:-ohmyzsh/ohmyzsh} REMOTE=${REMOTE:-https://github.com/${REPO}.git} ==\u0026gt; REPO=${REPO:-mirrors/oh-my-zsh} REMOTE=${REMOTE:-https://gitee.com/${REPO}.git} # 保存后执行 sh install.sh powerlevel10k: A Zsh theme (github.com)\n插件\n# zsh-syntax-highlighting 需要代理 git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting # zsh-autosuggestions 需要代理 git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions # vim ~/.zshrc plugins=( git zsh-autosuggestions zsh-syntax-highlighting z sudo # tmux ) 待续~ # ","date":"2024年7月26日","externalUrl":null,"permalink":"/blog/posts/linux%E7%B3%BB%E7%BB%9F%E9%85%8D%E7%BD%AE%E5%B8%B8%E7%94%A8%E9%93%BE%E6%8E%A5%E5%88%97%E8%A1%A8/","section":"博客","summary":"Linux系统配置常用链接列表，以Ubuntu为主，包括了apt镜像、docker、python、zsh等","title":"Linux系统配置常用链接列表","type":"posts"},{"content":"","date":"2024年7月26日","externalUrl":null,"permalink":"/blog/tags/%E6%96%B0%E5%8D%9A%E5%AE%A2/","section":"标签","summary":"","title":"新博客","type":"tags"},{"content":"旧博客是2022年初做的，当时觉得很好看，但是现在感觉它功能略显单一，另外博客在处理一些符号时会出问题，趁现在有时间，决定换一个。\n再见~ 且听风吟 因为穷，所以决定继续用GitHub page建博客。\n可以考虑的方案包括：\n继续用Jekyll，换个别的Jekyll Themes 使用VuePress、Docusaurus等框架 使用Hexo、Hugo等静态网站生成器 挑选了半天，我发现了一个宝藏Hugo项目：Blowfish，一见钟情~\n我是直接拿Red Blowfish (nunocoracao.github.io)改的，参考文档很详细而且有中文的，慢慢跟着研究一步一步来就好\n另外还参考了：\nHugo (gohugo.io) Hugo中文文档 (gohugo.org) 现在已经基本搭建好了！\n你好~且听风吟 ","date":"2024年7月26日","externalUrl":null,"permalink":"/blog/posts/%E6%96%B0%E5%8D%9A%E5%AE%A2%E7%9A%84%E5%88%9B%E5%BB%BA%E5%8E%86%E7%A8%8B/","section":"博客","summary":"新博客创建后的第一篇博客！介绍下这两天博客的创建历程~","title":"新博客的创建历程","type":"posts"},{"content":"\n","date":"2024年7月26日","externalUrl":null,"permalink":"/blog/categories/%E8%B5%84%E6%96%99%E6%B1%87%E6%80%BB/","section":"分类","summary":"","title":"资料汇总","type":"categories"},{"content":"\n","date":"2024年4月22日","externalUrl":null,"permalink":"/blog/categories/%E5%AD%A6%E4%B9%A0%E6%80%BB%E7%BB%93/","section":"分类","summary":"","title":"学习总结","type":"categories"},{"content":"","date":"2024年4月22日","externalUrl":null,"permalink":"/blog/tags/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F/","section":"标签","summary":"","title":"正则表达式","type":"tags"},{"content":" task 3 # # 参考答案 (?![EIOU])[B-Z] # 主要是我没想到这个能这么用，一般我觉得?!的用法只是 # \\d(?!nd) 用来匹配 1st 2nd 3pc 中除了2的其他两个数字 # 但是现在有了更深的理解，匹配的过程是先匹配后面的B-Z，然后把其中以EIOU其中的某一个开头的结果排除掉。 task 7 # # 我的答案 ^(?:(?:25[0-5]|2[0-4]\\d|1?\\d?\\d)\\.){3}(?:25[0-5]|2[0-4]\\d|1?\\d?\\d)$ # hhh确实有点蠢这个方法，但是当时确实没想到可以用\\b # 好一点的答案 ^(?:(?:25[0-5]|2[0-4]\\d|1\\d{2}|\\d{2}|\\d)(?:\\.|$)){4}\\b$ # 抄作业改进自己的 ^(?:(?:25[0-5]|2[0-4]\\d|1?\\d?\\d)(?:\\.|$)){4}\\b$ # 再改进一点点，尽力了44个字符，最优解是39 ^(?:(?:25[0-5]|2[0-4]\\d|1?\\d?\\d)\\.?\\b){4}$ task 8 # # 我的答案 \u0026lt;[^\u0026gt;]*\u0026gt;|^[^\u0026lt;]*\u0026gt;|\u0026lt;.*[^\u0026gt;]$ # 我的想法就是分情况，因为需要额外处理跨行情况下一行中没有\u0026lt;和没有\u0026gt;的两种情况 # 好一点的答案 (?:^|\u0026lt;)[^\u0026lt;\u0026gt;]*\u0026gt;|\u0026lt;[^\u0026gt;]* # 对其稍加优化（当然也可以去掉?: 不过按照普遍规范，不重复使用时用?:更好） (?:^|\u0026lt;)[^\u0026lt;]*\u0026gt;|\u0026lt;[^\u0026gt;]* # 更好的答案 \u0026lt;[^\u0026gt;]*|[^\u0026lt;]*\u0026gt; # 其实个人觉得有一点投机取巧了，因为这样虽然会得到正确结果 ，但实际上是拼接起来的，只有特定的情况下才能这么用吧 答案参考：[我的 Regex quiz 答案 - 丁丁の店 (butanediol.me)](https://blog.butanediol.me/2022/02/18/我的 Regex quiz 答案/#TASK-8-HTML-TAGS-OPTIONAL)\n另一个不错的学习入门网站：Regex Learn task 15 # 首先思路就是匹配到任意字符.任意字符的模式然后除掉数字.数字的情况\n任意字符我想到的表示方法就是：\\s|.|^|$\n所以得到正则表达式为：(?!\\d\\.\\d)(\\s|.|^)\\.(\\s|.|$)\n匹配没有太大的问题（所以也是有问题的），但是这道题要求是替换，就不太行了，因为这样默认的单次替换无法处理类似...的情况。如果将替换目标为$1-$2，那么...就会替换为.-.，按题目要求应该替换为---\n所以说，还是应该只匹配到那个点，再对其直接替换。方法就是把之前的表达式拆成两半：\n(?\u0026lt;!\\d)\\.|\\.(?!\\d)\n","date":"2024年4月22日","externalUrl":null,"permalink":"/blog/posts/%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E7%BB%83%E4%B9%A0-regex101/","section":"博客","summary":"正则表达式练习","title":"正则表达式练习 regex101","type":"posts"},{"content":"","date":"2022年6月13日","externalUrl":null,"permalink":"/blog/posts/","section":"博客","summary":"","title":"博客","type":"posts"},{"content":"你好，我是Kody，现在是上海交大网络空间安全专业的一名研究生\n欢迎访问我的博客，有什么需要欢迎和我联系\n邮箱： kodyblack@qq.com ","externalUrl":null,"permalink":"/blog/about/","section":"且听风吟","summary":"你好，我是Kody，现在是上海交大网络空间安全专业的一名研究","title":"","type":"page"},{"content":"","externalUrl":null,"permalink":"/blog/authors/","section":"Authors","summary":"","title":"Authors","type":"authors"},{"content":"\n","externalUrl":null,"permalink":"/blog/categories/ctf/","section":"分类","summary":"","title":"CTF","type":"categories"},{"content":"","externalUrl":null,"permalink":"/blog/series/","section":"Series","summary":"","title":"Series","type":"series"},{"content":"\n","externalUrl":null,"permalink":"/blog/categories/%E8%AE%BA%E6%96%87%E9%98%85%E8%AF%BB/","section":"分类","summary":"","title":"论文阅读","type":"categories"}]